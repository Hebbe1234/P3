@page
@model NorthernWinterBeat.Pages.ParticipantRazor.ParticipantArtistModel
@inject NorthernWinterBeatLibrary.Managers.IFestivalManager FestivalManager
@inject NorthernWinterBeatLibrary.Managers.IImageManager ImageManager 
@{
}

<style>
    #bookButton{
        margin-bottom:0.75em;
    }
</style>

<div class="d-md-block" id="ArtistBlock">
    <form method="post" asp-page-handler="GoBack">
        @Html.Hidden("Day", Model.concert.Start)
        <h1>
            <button class="btn hBack" style="background-color:transparent" type="submit">
                <svg width="2.5em" height="2.5em" viewBox="0 0 16 16" class="bi bi-arrow-left-circle" fill="blue" xmlns="http://www.w3.org/2000/svg">

                    <path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                    <path fill-rule="evenodd" d="M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z" />
                    Sorry, your browser does not support inline SVG.
                </svg>
            </button> @Model.concert.Artist
        </h1>
    </form>
    <img class="container-fluid" style="padding-right:0;padding-left:0;" src="https://www.winterbeat.dk/wp-content/uploads/2020/08/joe-.jpg" />

    @{
        var claimTicketID = HttpContext.User.Claims.Where(c => c.Type == "TicketID").Select(t => t.Value).First();
        var curPart = FestivalManager.GetParticipants().Where(p => p.Ticket?.TicketNumber == claimTicketID).First();

        if (Model.concert.End < DateTime.Now)
        {
            <button type="button" id="bookButton" class="btn btn-block btn-success text-center" data-toggle="modal" data-target="#removeBooking">
                Booked, remove booking?
            </button>
        }
        else if (Model.concert.IsAtMaxCapacity)
        {
            <button type="button" id="bookButton" class="btn btn-block btn-danger text-center" data-toggle="modal" data-target="#bookSpot" disabled>
                This concert is at max capacity
            </button>
        }
        else if (!(curPart?.CanMakeBookingAt(Model.concert, FestivalManager) ?? false))
        {
            {
                <button type="button" id="bookButton" class="btn btn-block btn-danger text-center" data-toggle="modal" data-target="#newBooking">
                    You already have a booking overlapping this concert. <b>Click here to book anyway.</b>
                </button>
            }
        }
        else
        {
            <button type="button" id="bookButton" class="btn btn-block btn-outline-primary text-center" data-toggle="modal" data-target="#bookSpot">
                Book spot
            </button>
        }
    }
    <div>
        <h4>@Model.concert.Artist</h4>
        <p>
            @Model.concert.ArtistDescription
        </p>
    </div>
    <h2>Concert Information</h2>
    <p>@Model.concert.Start.DayOfWeek @Model.concert.Start.ToString("dd-MM"), @Model.concert.Start.ToShortTimeString() - @Model.concert.End.ToShortTimeString()</p>
    <p>@Model.concert.Venue?.Name</p>
    <p>@Model.concert.Venue?.Address</p>
</div>


<!-- Remove diffrent booking and create new booking  modal -->
<div class="modal fade " id="newBooking" tabindex="-1" role="dialog" aria-labelledby="newBookingLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newBookingLabel">Book Spot</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure want to book a spot for this concert? It will remove your booking for the concert(s)
                @{ 
                    Concert concert = Model.concert; 
                    List<Concert> overlappedConcerts = curPart.GetParticipantBookings(FestivalManager).Select(b => b.Concert).Where(c => concert.Start < c.End && concert.End > c.Start).ToList();
                    foreach (Concert overlap in overlappedConcerts)
                    {
                        <p>@overlap.Artist</p>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <form asp-page-handler="NewBooking" method="post">
                    @Html.Hidden("id", Model.concert.ID)
                    <button class="btn btn-primary">
                        Yes
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>



<!-- Remove bookings  modal -->
<div class="modal fade " id="removeBooking" tabindex="-1" role="dialog" aria-labelledby="removeBookingLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeBookingLabel">Remove booking</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove your booking for this concert?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <form asp-page-handler="RemoveBooking" method="post">
                    @Html.Hidden("id", Model.concert.ID)
                    <button class="btn btn-primary">
                        Yes
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>




<!-- Book spot modal -->
<div class="modal fade " id="bookSpot" tabindex="-1" role="dialog" aria-labelledby="bookSpotLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookSpotLabel">Book Spot</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to book a spot for this concert?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <form asp-page-handler="BookSpot" method="post">
                    @Html.Hidden("id", Model.concert.ID)
                    <button class="btn btn-primary">
                        Yes
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>